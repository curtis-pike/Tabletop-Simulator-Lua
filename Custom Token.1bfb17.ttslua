-- GLOBALS --
RIGHT_CLICK = "-2"
BLUE_PLAYER = 1
RED_PLAYER = 2

ATTACK_INDEX = 1
MIN_ATTACK = 1
MAX_ATTACK = 6

HIT_INDEX = 2
MIN_HIT = 2
MAX_HIT = 6

NORMAL_DAMAGE_INDEX = 3
MIN_NORMAL_DAMAGE = 1
MAX_NORMAL_DAMAGE = 5

CRIT_DAMAGE_INDEX = 4
MIN_CRIT_DAMAGE = 1
MAX_CRIT_DAMAGE = 7

WOUNDS_INDEX = 5
MIN_WOUNDS = 0
MAX_WOUNDS = 21

NORMALS_INDEX = 6
MIN_NORMALS = 0
MAX_NORMALS = 5

CRITS_INDEX = 7
MIN_CRITS = 0
MAX_CRITS = 5

STATS_TABLE = {"attacks", "hit", "normalDamage", "critDamage", "wounds", "normals", "crits"}
MIN_TABLE = {MIN_ATTACK, MIN_HIT, MIN_NORMAL_DAMAGE, MIN_CRIT_DAMAGE, MIN_WOUNDS, MIN_NORMALS, MIN_CRITS}
MAX_TABLE = {MAX_ATTACK, MAX_HIT, MAX_NORMAL_DAMAGE, MAX_CRIT_DAMAGE, MAX_WOUNDS, MAX_NORMALS, MAX_CRITS}

-- END OF GLOBALS --

-- FUNCTIONS --

-- HELPERS --
function checkBoundsX(a, b)
  local a_min = a.getBounds().center.x - a.getBounds().size.x/2
  local a_max = a.getBounds().center.x + a.getBounds().size.x/2
  local b_x = b.getBounds().center.x
  if(a_min < b_x and b_x < a_max) then
    return true
  end
  return false
end

function checkBoundsZ(a, b)
  local a_min = a.getBounds().center.z - a.getBounds().size.z/2
  local a_max = a.getBounds().center.z + a.getBounds().size.z/2
  local b_z = b.getBounds().center.z
  if(a_min < b_z and b_z < a_max) then
    return true
  end
  return false
end

-- takes click type, red/blue, string index from STATS_TABLE, and value
function addValueToStat(player, click, id, stat_index, value)
  -- concat the stat string with the player id (1 or 2)
  local str = STATS_TABLE[stat_index]..tostring(id)
  -- pull the current value
  local curr = self.UI.getValue(str)
  -- if right click, make it subtract instead of add
  if click == RIGHT_CLICK then
    value = -value
  end
  local new = curr + value
  -- set the new value
  self.UI.setValue(str, math.min(MAX_TABLE[stat_index], math.max(new, MIN_TABLE[stat_index])))
end -- addValueToStat()

function modifyAttacks1(player, click)
  addValueToStat(player, click, BLUE_PLAYER, ATTACK_INDEX, 1)
end

function modifyAttacks2(player, click)
  addValueToStat(player, click, RED_PLAYER, ATTACK_INDEX, 1)
end

function modifyHit1(player, click)
  addValueToStat(player, click, BLUE_PLAYER, HIT_INDEX, 1)
end

function modifyHit2(player, click)
  addValueToStat(player, click, RED_PLAYER, HIT_INDEX, 1)
end

function modifyNormalDamage1(player, click)
  addValueToStat(player, click, BLUE_PLAYER, NORMAL_DAMAGE_INDEX, 1)
end

function modifyNormalDamage2(player, click)
  addValueToStat(player, click, RED_PLAYER, NORMAL_DAMAGE_INDEX, 1)
end

function modifyCritDamage1(player, click)
  addValueToStat(player, click, BLUE_PLAYER, CRIT_DAMAGE_INDEX, 1)
end

function modifyCritDamage2(player, click)
  addValueToStat(player, click, RED_PLAYER, CRIT_DAMAGE_INDEX, 1)
end

function modifyWounds1(player, click)
  addValueToStat(player, click, BLUE_PLAYER, WOUNDS_INDEX, 1)
end

function modifyWounds2(player, click)
  addValueToStat(player, click, RED_PLAYER, WOUNDS_INDEX, 1)
end

function modifyNormals1(player, click)
  addValueToStat(player, click, BLUE_PLAYER, NORMALS_INDEX, 1)
end

function modifyNormals2(player, click)
  addValueToStat(player, click, RED_PLAYER, NORMALS_INDEX, 1)
end

function modifyCrits1(player, click)
  addValueToStat(player, click, BLUE_PLAYER, CRITS_INDEX, 1)
end

function modifyCrits2(player, click)
  addValueToStat(player, click, RED_PLAYER, CRITS_INDEX, 1)
end


function modifyLethalX1(player, value)
  self.UI.setValue("lethalx1text", value)
  self.UI.setAttribute("lethalx1text", "offsetXY", (6-value)*16 .. " 0")
end

function modifyLethalX2(player, value)
  self.UI.setValue("lethalx2text", value)
  self.UI.setAttribute("lethalx2text", "offsetXY", (6-value)*16 .. " 0")
end

function test()
  print("test")
  local objects = getAllObjects()
  for index, object in pairs(objects) do
    if object.tag == "Dice" then
      if checkBoundsX(self, object) and checkBoundsZ(self, object) then
        print(object.getValue())
      end
    end
  end
end

function SpawnDice1()
  print("SpawnDice1()")
  local pos=self.getPosition()
  pos.x = pos.x + 4
  pos.y = pos.y + 5
  pos.z = pos.z + 4

  local objects = getAllObjects()
  for index, object in pairs(objects) do
    if object.tag == "Dice" then
      if checkBoundsX(self, object) and checkBoundsZ(self, object) then
        destroyObject(object)
      end
    end
  end

  for i=1,self.UI.getValue("attacks1") do
    pos.z = pos.z - 1
    if i == 4 then
      pos.z = pos.z + 3
      pos.x = pos.x + 1
    end
    spawnObject({type="Die_6", position=pos, rotation={-90, 0, 0}}).setColorTint("Blue")
  end

end

-- END OF BUTTON FUNCTION CALLS --
-- END OF FUNCTIONS
